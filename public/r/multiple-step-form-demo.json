{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "multiple-step-form-demo",
  "type": "registry:ui",
  "title": "Multiple Step Form Demo",
  "description": "component for the Multiple Step Form Demo",
  "dependencies": ["framer-motion", "lucide-react", "sonner"],
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label",
    "radio-group",
    "textarea",
    "select"
  ],
  "files": [
    {
      "path": "app/registry/multistepform/multistepdemo.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { ChevronLeft, ChevronRight, Check, Loader2 } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { toast } from \"sonner\"\nimport { cn } from \"@/lib/utils\"\n\n\nconst steps = [\n  { id: \"personal\", title: \"Personal Info\" },\n  { id: \"professional\", title: \"Professional\" },\n  { id: \"goals\", title: \"Website Goals\" },\n  { id: \"design\", title: \"Design\" },\n  { id: \"budget\", title: \"Budget\" },\n  { id: \"requirements\", title: \"Requirements\" }\n]\n\n\ninterface FormData {\n  name: string;\n  email: string;\n  company: string;\n  profession: string;\n  experience: string;\n  industry: string;\n  primaryGoal: string;\n  targetAudience: string;\n  contentTypes: string[];\n  colorPreference: string;\n  stylePreference: string;\n  inspirations: string;\n  budget: string;\n  timeline: string;\n  features: string[];\n  additionalInfo: string;\n}\n\n\nconst fadeInUp = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { opacity: 1, y: 0, transition: { duration: 0.3 } }\n}\n\nconst contentVariants = {\n  hidden: { opacity: 0, x: 50 },\n  visible: { opacity: 1, x: 0, transition: { duration: 0.3 } },\n  exit: { opacity: 0, x: -50, transition: { duration: 0.2 } }\n}\n\nconst OnboardingForm = () => {\n  const [currentStep, setCurrentStep] = useState(0)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [formData, setFormData] = useState<FormData>({\n    name: \"\",\n    email: \"\",\n    company: \"\",\n    profession: \"\",\n    experience: \"\",\n    industry: \"\",\n    primaryGoal: \"\",\n    targetAudience: \"\",\n    contentTypes: [],\n    colorPreference: \"\",\n    stylePreference: \"\",\n    inspirations: \"\",\n    budget: \"\",\n    timeline: \"\",\n    features: [],\n    additionalInfo: \"\",\n  })\n\n  const updateFormData = (field: keyof FormData, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }))\n  }\n\n  const toggleFeature = (feature: string) => {\n    setFormData((prev) => {\n      const features = [...prev.features]\n      if (features.includes(feature)) {\n        return { ...prev, features: features.filter((f) => f !== feature) }\n      } else {\n        return { ...prev, features: [...features, feature] }\n      }\n    })\n  }\n\n  const toggleContentType = (type: string) => {\n    setFormData((prev) => {\n      const types = [...prev.contentTypes]\n      if (types.includes(type)) {\n        return { ...prev, contentTypes: types.filter((t) => t !== type) }\n      } else {\n        return { ...prev, contentTypes: [...types, type] }\n      }\n    })\n  }\n\n  const nextStep = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep((prev) => prev + 1)\n    }\n  }\n\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep((prev) => prev - 1)\n    }\n  }\n\n  const handleSubmit = () => {\n    setIsSubmitting(true)\n    \n    // Simulate API call\n    setTimeout(() => {\n      
      "type": "registry:ui",
      "target": "components/spectrumui/multistepformdemo.tsx"
    }
  ]
}
